name: Deploy package from releases (hotfixes)

on:
  push:
    branches:
      - release_v*

jobs:
  create-tag:
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v2

      - name: Read branch name
        id: read_branch_name
        run: |
          branchName=${GITHUB_REF#refs/heads/}
          version=${branchName#release_v}
          echo "::set-output name=version::$version"

      - name: Read package json version
        id: read_package_json_version
        run: |
          content=`cat ./package.json`
          # the following lines are only required for multi line json
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          # end of optional handling for multi line json
          echo "::set-output name=packageJson::$content"

      - name: Compare versions
        id: compare_versions
        run: |
          packageJsonVersion=${{fromJson(steps.read_package_json_version.outputs.packageJson).version}}
          branchVersion=${{steps.read_branch_name.outputs.version}}

          echo "Package Json Version: $packageJsonVersion"
          echo "Branch Version: $branchVersion"

          branchVersion=(${branchVersion//./ })
          packageJsonVersionSplittedByDot=(${packageJsonVersion//./ })

          if [ "${packageJsonVersionSplittedByDot[0]}" == "${branchVersion[0]}" ] && [ "${packageJsonVersionSplittedByDot[1]}" == "${branchVersion[1]}" ]; then
            echo "MAJOR AND MINOR ARE SAME :) !"
          else
            echo "MAJOR AND MINOR ARE NOT SAME :( !"
            exit 1
          fi
      
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          custom_tag: "${{fromJson(steps.read_package_json_version.outputs.packageJson).version}}"
          github_token: ${{ secrets.GITHUB_TOKEN }}

  build:
    needs: create-tag
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 12
      - run: npm ci
      - run: npm test

  publish-gpr:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 12
          registry-url: https://npm.pkg.github.com/
      - run: npm ci
      - run: npm publish --tag old-version
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

      