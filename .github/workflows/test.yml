name: test

on:
  workflow_dispatch:

jobs:
  create-tag:
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Required due to the way Git works, without it this action won't be able to find any or the correct tags

      # I use ${version:1} to remove first caracter from version, because it's a "v" and I don't want it
      - name: Get greatest tag
        run: |
          git fetch --tags
          version=$(git tag | tail -1)
          echo "Greatest tag: $version"
          echo "::set-output name=version::${version:1}"
      
      - name: Read package json version
        id: read_package_json_version
        run: |
          content=`cat ./package.json`
          # the following lines are only required for multi line json
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          # end of optional handling for multi line json
          echo "::set-output name=packageJson::$content"

      - name: Compare tag version and package json
        id: compare_tag_version_and_package_json
        run: |
          packageJsonVersion=$(echo "${{ steps.read_package_json_version.outputs.packageJson }}" | jq -r '.version')
          echo "Package json version: $packageJsonVersion"
          if [ $packageJsonVersion == ${{ steps.create-tag.outputs.version }} ]; then
            echo "Versions are the same"
            echo "::set-output name=version::${{ steps.create-tag.outputs.version }}"
          else
            echo "Versions are different"
            echo "::set-output name=version::${{ steps.create-tag.outputs.version }}.1"
          fi

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          custom_tag: "${{fromJson(steps.read_package_json_version.outputs.packageJson).version}}"
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create branch
        uses: peterjgrainger/action-create-branch@v2.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          branch: 'release_${{ steps.tag_version.outputs.new_tag }}'
          sha: '${{ github.event.pull_request.head.sha }}'

      